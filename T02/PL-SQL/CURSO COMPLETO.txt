CREATE OR REPLACE PROCEDURE incluir_segmercado
    (p_id IN segmercado.id%type   ,
     p_descricao in segmercado.descricao%type)
IS

BEGIN
       INSERT into segmercado
           values(p_id, UPPER(p_descricao));
    COMMIT;
END;

select * from SEGMERCADO





/*Aula 4*/

CREATE OR REPLACE FUNCTION obter_descricao_segmercado
    (p_id IN segmercado.id%type)
    RETURN segmercado.descricao%type
IS
    v_descricao segmercado.descricao%type;
    
BEGIN
    SELECT descricao INTO v_descricao
        FROM segmercado
        WHERE id = p_id;
    RETURN v_descricao;
end;

/*
VARIABLE g_descricao varchar2(100)
EXECUTE :g_descricao := obter_descricao_segmercado (1)
PRINT g_descricao
*/


SET SERVEROUTPUT ON
DECLARE
     v_descricao segmercado.descricao%type;
BEGIN
    v_descricao := obter_descricao_segmercado(2);
    dbms_output.put_line('Descricao: '||v_deScricao);
END;


CREATE OR REPLACE PROCEDURE INCLUIR_CLIENTE
    (p_id in cliente.id%type,
    p_razao_social IN cliente.razao_social%type,
    p_CNPJ cliente.CNPJ%type ,
    p_segmercado_id IN cliente.segmercado_id%type,
    p_faturamento_previsto IN cliente.faturamento_previsto%type)
 IS
    v_categoria cliente.categoria%type;
    
BEGIN
    IF p_faturamento_previsto < 10000 THEN
        v_categoria := 'PEQUENO';
    ELSIF p_faturamento_previsto < 50000 THEN
        v_categoria := 'MEDIO';
    ELSIF p_faturamento_previsto < 100000 THEN
        v_categoria := 'MEDIO GRANDE';
    ELSE
        v_categoria := 'GRANDE';
    END IF;

    INSERT INTO cliente
        VALUES (p_id, UPPER(p_razao_social),p_CNPJ,p_segmercado_id, SYSDATE, p_faturamento_previsto, v_categoria);
    COMMIT;
END;

EXECUTE     INCLUIR_CLIENTE(1, 'SUPERMERCADO XYZ', '12345', NULL, 150000)

SELECT * FROM CLIENTE;


EXECUTE INCLUIR_CLIENTE(2, 'SUPERMERCADO IJK', '67890', NULL, 90000);




/*Aula 5*/


SELECT * FROM CLIENTE;

CREATE OR REPLACE PROCEDURE FORMAT_CNPJ
    (p_cnpj IN OUT cliente.CNPJ%type)
    
    
IS
BEGIN
    p_cnpj := substr(p_cnpj,1,2) ||'/'|| substr(p_cnpj,3);
END;

VARIABLE g_cnpj varchar2(10)
EXECUTE :g_cnpj := '12345'
PRINT g_cnpj

EXECUTE FORMAT_CNPJ(:g_cnpj)
PRINT g_cnpj


EXECUTE incluir_cliente(3, 'Industria RTY', '12378', NULL, 110000)

SELECT * FROM CLIENTE;


CREATE OR REPLACE PROCEDURE ATUALIZAR_CLI_SEG_MERCADO
    (p_id cliente.id%type,
    p_segmercado_id IN cliente.segmercado_id%type)
IS
BEGIN
    UPDATE cliente
        SET segmercado_id = p_segmercado_id
        WHERE id = p_id;
    COMMIT;
END;


DECLARE
    v_segmercado_id cliente.segmercado_id%type :=1;
    v_i number(3);
BEGIN
        v_i := 1;
LOOP
        ATUALIZAR_CLI_SEG_MERCADO(v_i, v_segmercado_id);
        v_i := v_i + 1;
        EXIT WHEN v_i > 3;
END LOOP;
END;

select * from cliente


DECLARE
    v_segmercado_id cliente.segmercado_id%type := 2;
BEGIN
    FOR i in 1..3 LOOP
        ATUALIZAR_CLI_SEG_MERCADO(i, v_segmercado_id);
    END LOOP;
    COMMIT;
END;

select * from cliente;


DECLARE
    v_id                       NUMBER;
    v_segmercado_id            NUMBER;
BEGIN
    v_id := 1;
    v_segmercado_id := 2;
    atualizar_cli_seg_mercado(p_id => v_id,p_segmercado_id => v_segmercado_id);
--rollback;
END;

select * from cliente


DECLARE
    v_id cliente.id%type;
    v_segmercado_id cliente.segmercado_id%type := 1;
    CURSOR cur_cliente is
        SELECT id
        FROM cliente;
BEGIN
    OPEN cur_cliente;
    LOOP
        FETCH cur_cliente into v_id;
        EXIT WHEN cur_cliente%NOTFOUND;
        ATUALIZAR_CLI_SEG_MERCADO(v_id, v_segmercado_id);
    END LOOP;
    
    CLOSE cur_cliente;
    
    COMMIT;

END;


DECLARE
    v_segmercado_id cliente.segmercado_id%type := 2;
    CURSOR cur_cliente is
        SELECT id
        FROM cliente;
BEGIN
    FOR cli_rec IN cur_cliente LOOP
        ATUALIZAR_CLI_SEG_MERCADO(cli_rec.id, v_segmercado_id);
    END LOOP;

    COMMIT;

END;



select * from cliente where id=1;

